(ns simplicity-deck.sample-code
    (:require [hoplon.reveal :refer [highlight]]))


(defn get-simple-ring-app []
  (highlight
    ;;{{
    (ns request-echo
      (:require [clojure.pprint :refer [pprint]]))

    (defn handler
      "Return the request as HTML."
      ;; A request comes in the handler.
      [request]

      ;; The handler returns a response map.
      {:status 200
       :headers {"Content-Type" "text/html"}
       :body (str "<h1>Request Echo</h1><pre>"
                  (with-out-str (pprint request))
                  "</pre>")})
    ;;}}
    ))

(defn call-a-function []
  (highlight
    ;;{{
    (println "Hello, friends!")
    ;;}}
    ))

(defn use-let []
  (highlight
    ;;{{
    (let [x 1
          y 2]
      (println "x + y = " (+ x y)))
    ;;}}
    ))

(defn define-with-defn []
  (highlight
    ;;{{
    (defn fun-fun 
      []
      (println "Hello from a function."))
    ;;}}
    ))

(defn show-map []
  (highlight
    ;;{{
    (map inc (range 1 10))
    ;;}}
    ))

(defn show-reduce []
  (highlight
    ;;{{
    (reduce + (range 1 10))
    ;;}}
    ))

(defn show-cond []
  (highlight
    ;;{{
    (cond
      )

    ;;}}
    ))

(defn show-if []
  (highlight
    ;;{{
    (if 
      )
    ;;}}
    ))

(defn show-loop []
  (highlight
    ;;{{
    (loop 
      )
    ;;}}
    ))

(defn show-doseq []
  (highlight
    ;;{{
    (doseq
      )
    ;;}}
    ))
