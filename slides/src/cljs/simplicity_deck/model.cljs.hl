(ns simplicity-deck.model
    (:require [hoplon.reveal :refer [chapter slide notes bullet]]
              [simplicity-deck.sample-code :as sample-code]))


(defn slides []
  (chapter :title "Modeling Data"
    (slide :title "Modeling Board Games"
      (notes "Let's model some well-known board games. "
             "We won't use classes and objects. Instead we'll use collections."))
    (slide :title "Clue"
      (sample-code/clue-model)
      (notes "Map with keywords and values.\n"
             "http://boardgamegeek.com/"))
    (slide :title "Monopoly"
      (sample-code/monopoly-model))
    (slide :title "Candy Land"
      (sample-code/candy-land-model))
    (slide :title "Settlers of Catan"
      (sample-code/catan-model))
    (slide :title "Diplomacy"
      (sample-code/diplomacy-model))
    (slide :title "Board Games"
      (sample-code/board-games-model)
      (notes "Use a set to hold the board games. Why? What about ordering?\n"
             ";; comment"))
    (slide :title "Board Game Modeling"
      (p "Create a model for your favorite board game.")
      (p "Define vars for each game and add to the board-games set.")
      (p "Bonus: Model a game player."))
    (slide :title "Where is my object?"
      (sample-code/player-model)
      (notes "Just add :type"))
    (slide :title "Who else likes games?"
      (sample-code/more-models))
    (slide :title "Access"
      (sample-code/access-model)
      (notes "Can get or use keyword as function to access fields. In "
             "object-oriented world, need interfaces for that."))
    (slide :title "Records"
      (sample-code/player-record))))
             
